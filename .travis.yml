language: cpp

dist: bionic

sudo: require

env:
  global:
   # The next declaration is the encrypted COVERITY_SCAN_TOKEN, created
   #   via the "travis encrypt" command using the project repo's public key
   - secure: "ev1xh15/xbYiElXyiC5yEwPiP99Vp9jO7zNjk9AVrH76MZNlHOp90bdDYF7zkgRMKBWORcQubTF8h9iM1EFYXwxWVapuKrFlISQKHuErOo+hjKFzMvJcdYhBd2BZCbkQmowv1U860QlZGx+oW6hhG1sJmWfzm/AANQuc6/+qozI="

before_install:
 - uname -a
 - lsb_release -a
 - gcc -v && g++ -v && clang -v && cmake --version

jobs:
  include:
    - language: cpp
      compiler: gcc
      script:
        - mkdir -p build
        - cd build
        - rm -rf *
        - export CC=gcc
        - export CXX=g++
        - cmake -G "Unix Makefiles" -DBUILD_QT5=OFF ..
        - make
        - make package
        - sudo make install
        - cqmakedb -v
        - cd ..
        - rm -f cscope.out
        - rm -f tags
        - rm -f cq.db
        - cscope -cbR
        - ctags --fields=+i -nR
        - cqmakedb -s cq.db -c cscope.out -t tags -p -d
        - cqsearch -s cq.db -p 1 -t CODEQUERY_SW_VERSION -u
    - language: cpp
      compiler: gcc
      script:
        - mkdir -p build
        - cd build
        - rm -rf *
        - export CC=gcc
        - export CXX=g++
        - cmake -G "Unix Makefiles" -DBUILD_QT5=ON ..
        - make
        - make package
        - sudo make install
        - cqmakedb -v
        - cd ..
        - rm -f cscope.out
        - rm -f tags
        - rm -f cq.db
        - cscope -cbR
        - ctags --fields=+i -nR
        - cqmakedb -s cq.db -c cscope.out -t tags -p -d
        - cqsearch -s cq.db -p 1 -t CODEQUERY_SW_VERSION -u
    - language: cpp
      compiler: gcc
      script:
        - mkdir -p build
        - cd build
        - rm -rf *
        - export CC=gcc
        - export CXX=g++
        - cmake -G "Unix Makefiles" -DNO_GUI=ON ..
        - make
        - make package
        - sudo make install
        - cqmakedb -v
        - cd ..
        - rm -f cscope.out
        - rm -f tags
        - rm -f cq.db
        - cscope -cbR
        - ctags --fields=+i -nR
        - cqmakedb -s cq.db -c cscope.out -t tags -p -d
        - cqsearch -s cq.db -p 1 -t CODEQUERY_SW_VERSION -u
    - language: cpp
      compiler: clang
      script:
        - mkdir -p build
        - cd build
        - rm -rf *
        - export CC=clang
        - export CXX=clang++
        - cmake -G "Unix Makefiles" -DBUILD_QT5=ON ..
        - make
        - make package
        - sudo make install
        - cqmakedb -v
        - cd ..
        - rm -f cscope.out
        - rm -f tags
        - rm -f cq.db
        - cscope -cbR
        - ctags --fields=+i -nR
        - cqmakedb -s cq.db -c cscope.out -t tags -p -d
        - cqsearch -s cq.db -p 1 -t CODEQUERY_SW_VERSION -u        

addons:
  apt:
    packages:
      - build-essential
      - cmake
      - g++
      - sqlite3
      - libsqlite3-dev
      - qt5-default
      - qttools5-dev-tools
      - qttools5-dev
      - cscope
      - exuberant-ctags
      - qt4-dev-tools
      - libclang-dev
  coverity_scan:
    project:
      name: "ruben2020/codequery"
      description: "Build submitted via Travis CI"
    notification_email: ruben2020-git@users.sourceforge.net
    build_command_prepend: "mkdir -p build; cd build; rm -rf *; cmake -DBUILD_QT5=ON .."
    build_command:   "make" 
    branch_pattern: coverity_scan

notifications:
  email:
    - ruben2020-git@users.sourceforge.net
  on_success: change
  on_failure: always
  
  
